{"ast":null,"code":"/**\n* Error's object\n* Manage every single error to throw\n*/\nconst ERRORS = {\n  att_not_valid: function (key) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `\"${key}\" attribute is not valid.`;\n    return new Error(message);\n  },\n  not_in_enum: function (key, value, array) {\n    let message = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : `\"${key}\" value is not valid -` + ` Given: ${value} - Must be one of: [ ${array.map(element => ` ${element}`)} ]`;\n    return new Error(message);\n  },\n  att_required: function (att) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `\"${att}\" attribute is required`;\n    return new ReferenceError(message);\n  },\n  emtpy_param: function () {\n    let param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Param';\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${param} required`;\n    return new ReferenceError(message);\n  },\n  not_valid_typo: function (att, typo) {\n    let message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : `${att} must be ${typo}`;\n    return new TypeError(message);\n  },\n  empty_object: function () {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Object cannot be empty';\n    return new Error(message);\n  },\n  empty_model: () => new Error('Model param required'),\n  obj_not_editable: function (key) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${key} is no editable`;\n    return new Error(message);\n  }\n};\nexport default ERRORS;","map":{"version":3,"names":["ERRORS","att_not_valid","key","message","Error","not_in_enum","value","array","map","element","att_required","att","ReferenceError","emtpy_param","param","not_valid_typo","typo","TypeError","empty_object","empty_model","obj_not_editable"],"sources":["/Users/mac/Desktop/sky/skyalert-New/src/utils/errors.js"],"sourcesContent":["/**\n* Error's object\n* Manage every single error to throw\n*/\nconst ERRORS = {\n  att_not_valid: (key, message = `\"${key}\" attribute is not valid.`) => new Error(message),\n\n  not_in_enum: (key, value, array, message = `\"${key}\" value is not valid -` +\n    ` Given: ${value} - Must be one of: [ ${array.map(element => ` ${element}`)} ]`) => new Error(message),\n\n  att_required: (att, message = `\"${att}\" attribute is required`) => new ReferenceError(message),\n\n  emtpy_param: (param = 'Param', message = `${param} required`) => new ReferenceError(message),\n\n  not_valid_typo: (att, typo, message = `${att} must be ${typo}`) => new TypeError(message),\n\n  empty_object: (message = 'Object cannot be empty') => new Error(message),\n\n  empty_model: () => new Error('Model param required'),\n\n  obj_not_editable: (key, message = `${key} is no editable`) => new Error(message),\n};\n\nexport default ERRORS;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,MAAM,GAAG;EACbC,aAAa,EAAE,UAACC,GAAD;IAAA,IAAMC,OAAN,uEAAiB,IAAGD,GAAI,2BAAxB;IAAA,OAAuD,IAAIE,KAAJ,CAAUD,OAAV,CAAvD;EAAA,CADF;EAGbE,WAAW,EAAE,UAACH,GAAD,EAAMI,KAAN,EAAaC,KAAb;IAAA,IAAoBJ,OAApB,uEAA+B,IAAGD,GAAI,wBAAR,GACxC,WAAUI,KAAM,wBAAuBC,KAAK,CAACC,GAAN,CAAUC,OAAO,IAAK,IAAGA,OAAQ,EAAjC,CAAoC,IADjE;IAAA,OACyE,IAAIL,KAAJ,CAAUD,OAAV,CADzE;EAAA,CAHA;EAMbO,YAAY,EAAE,UAACC,GAAD;IAAA,IAAMR,OAAN,uEAAiB,IAAGQ,GAAI,yBAAxB;IAAA,OAAqD,IAAIC,cAAJ,CAAmBT,OAAnB,CAArD;EAAA,CAND;EAQbU,WAAW,EAAE;IAAA,IAACC,KAAD,uEAAS,OAAT;IAAA,IAAkBX,OAAlB,uEAA6B,GAAEW,KAAM,WAArC;IAAA,OAAoD,IAAIF,cAAJ,CAAmBT,OAAnB,CAApD;EAAA,CARA;EAUbY,cAAc,EAAE,UAACJ,GAAD,EAAMK,IAAN;IAAA,IAAYb,OAAZ,uEAAuB,GAAEQ,GAAI,YAAWK,IAAK,EAA7C;IAAA,OAAmD,IAAIC,SAAJ,CAAcd,OAAd,CAAnD;EAAA,CAVH;EAYbe,YAAY,EAAE;IAAA,IAACf,OAAD,uEAAW,wBAAX;IAAA,OAAwC,IAAIC,KAAJ,CAAUD,OAAV,CAAxC;EAAA,CAZD;EAcbgB,WAAW,EAAE,MAAM,IAAIf,KAAJ,CAAU,sBAAV,CAdN;EAgBbgB,gBAAgB,EAAE,UAAClB,GAAD;IAAA,IAAMC,OAAN,uEAAiB,GAAED,GAAI,iBAAvB;IAAA,OAA4C,IAAIE,KAAJ,CAAUD,OAAV,CAA5C;EAAA;AAhBL,CAAf;AAmBA,eAAeH,MAAf"},"metadata":{},"sourceType":"module"}