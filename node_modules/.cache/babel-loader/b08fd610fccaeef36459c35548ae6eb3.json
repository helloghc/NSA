{"ast":null,"code":"import Schema from '../utils/schema';\nimport BaseModel from '../utils/basemodel';\nimport SkyAlertAPI from '../api/SkyAlertAPI';\n/**\r\n * @const\r\n * Array of image types\r\n */\n\nconst TYPES = ['Image', 'SocialMedia', 'Video'];\nconst TYPELABELS = ['Imagen', 'Social Media', 'Video'];\n/**\r\n * @const\r\n * Schema to validate the class\r\n */\n\nconst schema = new Schema({\n  /* Move to generic Schema */\n  _id: {\n    type: String\n  },\n  id: {\n    type: String\n  },\n  createdAt: {\n    type: String\n  },\n  updatedAt: {\n    type: String\n  },\n  score: {\n    type: Number\n  },\n\n  /* Request removal */\n  __v: {\n    type: Number\n  },\n\n  /* Specific properties */\n  type: {\n    type: String,\n    enum: TYPES,\n    editable: true,\n    label: 'Tipo (Seleccionar \"imagen\")',\n    enumLabels: TYPES.map((role, index) => ({\n      value: TYPES[index],\n      text: TYPELABELS[index]\n    }))\n  },\n  _searchText: {\n    type: String\n  },\n  description: {\n    type: String,\n    editable: true,\n    label: 'Descripción'\n  },\n  pic: new Schema({\n    filename: {\n      type: String\n    },\n    exists: {\n      type: Boolean\n    },\n    mime: {\n      type: String\n    },\n    size: new Schema({\n      width: {\n        type: Number\n      },\n      height: {\n        type: Number\n      }\n    }),\n    focus: new Schema({\n      left: {\n        type: Number\n      },\n      top: {\n        type: Number\n      },\n      width: {\n        type: Number\n      },\n      height: {\n        type: Number\n      }\n    })\n  })\n});\n/**\r\n * @class Image\r\n */\n\nclass Image extends BaseModel {\n  /**\r\n   * Creates an instance of Image.\r\n   * @param {Object} image\r\n   * @memberof Image\r\n   */\n  constructor(image) {\n    super(schema, 'image');\n\n    try {\n      Object.keys(image).forEach(key => {\n        this[key] = image[key];\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  /**\r\n   * Returns a URL to the pic\r\n   * of the image\r\n   * @returns String\r\n   * @memberof Image\r\n   */\n\n\n  getPic() {\n    const id = this.id || this._id;\n    if (!id) return null;\n    return SkyAlertAPI.getPicURL(id, this.alias);\n  }\n  /**\r\n   * Returns a URL to the thumbnail\r\n   * of the image\r\n   * @returns String\r\n   * @memberof Image\r\n   */\n\n\n  getThumb() {\n    const id = this.id || this._id;\n    if (!id) return null;\n    return SkyAlertAPI.getThumbURL(id, this.alias);\n  }\n\n}\n/**\r\n * New validator to validate the Schema\r\n */\n// const validator = new Validator(schema);\n\n/**\r\n * New object with proxy to control the setter and constructor\r\n */\n\n/* const ProxyImage = validator.generateProxy(Image);\r\n\r\nexport default ProxyImage; */\n\n\nexport default Image;","map":{"version":3,"names":["Schema","BaseModel","SkyAlertAPI","TYPES","TYPELABELS","schema","_id","type","String","id","createdAt","updatedAt","score","Number","__v","enum","editable","label","enumLabels","map","role","index","value","text","_searchText","description","pic","filename","exists","Boolean","mime","size","width","height","focus","left","top","Image","constructor","image","Object","keys","forEach","key","error","console","getPic","getPicURL","alias","getThumb","getThumbURL"],"sources":["/var/www/html/nuevo-skyalert-react/src/utils/mediaImage.js"],"sourcesContent":["import Schema from '../utils/schema';\r\nimport BaseModel from '../utils/basemodel';\r\nimport SkyAlertAPI from '../api/SkyAlertAPI';\r\n\r\n/**\r\n * @const\r\n * Array of image types\r\n */\r\nconst TYPES = ['Image', 'SocialMedia', 'Video'];\r\nconst TYPELABELS = ['Imagen', 'Social Media', 'Video'];\r\n\r\n/**\r\n * @const\r\n * Schema to validate the class\r\n */\r\nconst schema = new Schema({\r\n  /* Move to generic Schema */\r\n  _id: {\r\n    type: String,\r\n  },\r\n  id: {\r\n    type: String,\r\n  },\r\n  createdAt: {\r\n    type: String,\r\n  },\r\n  updatedAt: {\r\n    type: String,\r\n  },\r\n  score: {\r\n    type: Number,\r\n  },\r\n  /* Request removal */\r\n  __v: {\r\n    type: Number,\r\n  },\r\n  /* Specific properties */\r\n  type: {\r\n    type: String,\r\n    enum: TYPES,\r\n    editable: true,\r\n    label: 'Tipo (Seleccionar \"imagen\")',\r\n    enumLabels: TYPES.map((role, index) => ({ value: TYPES[index], text: TYPELABELS[index] })),\r\n  },\r\n  _searchText: {\r\n    type: String,\r\n  },\r\n  description: {\r\n    type: String,\r\n    editable: true,\r\n    label: 'Descripción',\r\n  },\r\n  pic: new Schema({\r\n    filename: {\r\n      type: String,\r\n    },\r\n    exists: {\r\n      type: Boolean,\r\n    },\r\n    mime: {\r\n      type: String,\r\n    },\r\n    size: new Schema({\r\n      width: {\r\n        type: Number,\r\n      },\r\n      height: {\r\n        type: Number,\r\n      },\r\n    }),\r\n    focus: new Schema({\r\n      left: {\r\n        type: Number,\r\n      },\r\n      top: {\r\n        type: Number,\r\n      },\r\n      width: {\r\n        type: Number,\r\n      },\r\n      height: {\r\n        type: Number,\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\n\r\n/**\r\n * @class Image\r\n */\r\nclass Image extends BaseModel {\r\n  /**\r\n   * Creates an instance of Image.\r\n   * @param {Object} image\r\n   * @memberof Image\r\n   */\r\n  constructor(image) {\r\n    super(schema, 'image');\r\n    try{\r\n    Object.keys(image).forEach((key) => {\r\n      this[key] = image[key];\r\n    });\r\n    }catch(error){\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a URL to the pic\r\n   * of the image\r\n   * @returns String\r\n   * @memberof Image\r\n   */\r\n  getPic() {\r\n    const id = this.id || this._id;\r\n\r\n    if (!id) return null;\r\n\r\n    return SkyAlertAPI.getPicURL(id, this.alias);\r\n  }\r\n\r\n  /**\r\n   * Returns a URL to the thumbnail\r\n   * of the image\r\n   * @returns String\r\n   * @memberof Image\r\n   */\r\n  getThumb() {\r\n    const id = this.id || this._id;\r\n\r\n    if (!id) return null;\r\n\r\n    return SkyAlertAPI.getThumbURL(id, this.alias);\r\n  }\r\n}\r\n\r\n/**\r\n * New validator to validate the Schema\r\n */\r\n// const validator = new Validator(schema);\r\n\r\n/**\r\n * New object with proxy to control the setter and constructor\r\n */\r\n/* const ProxyImage = validator.generateProxy(Image);\r\n\r\nexport default ProxyImage; */\r\n\r\nexport default Image;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}