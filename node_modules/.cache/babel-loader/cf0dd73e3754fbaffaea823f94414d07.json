{"ast":null,"code":"/* eslint-disable-next-line */\nimport Schema from './schema';\n/**\n * Super class to do composition over\n * all models\n * @class SuperClass\n */\n\nexport default class BaseModel {\n  /**\n   * Creates an instance of SuperClass.\n   * @param {Schema} schema\n   * @memberof SuperClass\n   */\n  constructor(schema) {\n    let alias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'model';\n    Object.defineProperty(this, 'schema', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: schema\n    });\n    Object.defineProperty(this, 'alias', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: alias.toLowerCase()\n    });\n  }\n  /**\n   * Get all attributes that can be edited\n   * @returns Object\n   * @memberof SuperClass\n   */\n\n\n  getEditable() {\n    const attributes = this.schema.getAllEditable();\n    const labels = this.schema.getAllLabels();\n    return attributes.reduce((acc, current) => {\n      const label = current.split('.');\n      let name;\n\n      if (label.length > 2) {\n        const exists = this[label[0]] && this[label[0]][label[1]];\n        name = labels[current] ? labels[current] : label[2];\n        return { ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]][label[1]][label[2]].type,\n            value: exists ? this[label[0]][label[1]][label[2]] : undefined,\n            options: exists && this.schema.hasEnum(this.schema[label[0]][label[1]][label[2]]) ? this.schema[label[0]][label[1]][label[2]].enumLabels || this.schema[label[0]][label[1]][label[2]].enum : undefined\n          }\n        };\n      }\n\n      if (label.length > 1) {\n        const exists = !!this[label[0]];\n        name = labels[current] ? labels[current] : label[1];\n        return { ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]][label[1]].type,\n            value: exists ? this[label[0]][label[1]] : undefined,\n            options: exists && this.schema.hasEnum(this.schema[label[0]][label[1]]) ? this.schema[label[0]][label[1]].enumLabels || this.schema[label[0]][label[1]].enum : undefined\n          }\n        };\n      }\n\n      if (label.length > 0) {\n        name = labels[current] || label[0];\n        return { ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]].type,\n            value: this[label[0]],\n            options: this.schema.hasEnum(this.schema[label[0]]) ? this.schema[label[0]].enumLabels || this.schema[label[0]].enum : undefined\n          }\n        };\n      }\n\n      return { ...acc\n      };\n    }, {});\n  }\n  /**\n   * Saves de editable Object\n   * @param {Object} editable\n   * @memberof BaseModel\n   */\n\n\n  saveEditable(editable) {\n    const labels = this.schema.getAllLabels();\n    const labelKeys = Object.keys(labels);\n\n    const getLabel = value => labelKeys.find(key => labels[key] === value);\n\n    const save = (key, value) => {\n      const keys = key.split('.');\n      /* eslint-disable indent */\n\n      switch (keys.length) {\n        case 1:\n          this[keys[0]] = value;\n          break;\n\n        case 2:\n          if (this[keys[0]] === undefined) this[keys[0]] = {};\n          this[keys[0]][keys[1]] = value;\n          break;\n\n        case 3:\n          if (this[keys[0]] === undefined) this[keys[0]] = {};\n          if (this[keys[0]][keys[1]] === undefined) this[keys[0]][keys[1]] = {};\n          this[keys[0]][keys[1]][keys[2]] = value;\n          break;\n\n        default:\n          console.error('Not a valid key');\n          throw new Error('Not a valid key');\n      }\n      /* eslint-enable indent */\n\n    };\n\n    Object.keys(editable).forEach(key => {\n      const label = getLabel(key);\n\n      if (key === labels[label]) {\n        save(label, editable[key].value);\n      }\n    });\n    return this;\n  }\n\n}","map":{"version":3,"names":["Schema","BaseModel","constructor","schema","alias","Object","defineProperty","enumerable","configurable","writable","value","toLowerCase","getEditable","attributes","getAllEditable","labels","getAllLabels","reduce","acc","current","label","split","name","length","exists","key","type","undefined","options","hasEnum","enumLabels","enum","saveEditable","editable","labelKeys","keys","getLabel","find","save","console","error","Error","forEach"],"sources":["/var/www/html/nuevo-skyalert-react/src/utils/basemodel.js"],"sourcesContent":["/* eslint-disable-next-line */\nimport Schema from './schema';\n\n/**\n * Super class to do composition over\n * all models\n * @class SuperClass\n */\nexport default class BaseModel {\n  /**\n   * Creates an instance of SuperClass.\n   * @param {Schema} schema\n   * @memberof SuperClass\n   */\n  constructor(schema, alias = 'model') {\n    Object.defineProperty(this, 'schema', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: schema,\n    });\n\n    Object.defineProperty(this, 'alias', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: alias.toLowerCase(),\n    });\n  }\n\n  /**\n   * Get all attributes that can be edited\n   * @returns Object\n   * @memberof SuperClass\n   */\n  getEditable() {\n    const attributes = this.schema.getAllEditable();\n    const labels = this.schema.getAllLabels();\n\n    return attributes.reduce((acc, current) => {\n      const label = current.split('.');\n      let name;\n\n      if (label.length > 2) {\n        const exists = (this[label[0]] && this[label[0]][label[1]]);\n        name = (labels[current]) ? labels[current] : label[2];\n\n        return {\n          ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]][label[1]][label[2]].type,\n            value: exists ? this[label[0]][label[1]][label[2]] : undefined,\n            options: (exists && this.schema.hasEnum(this.schema[label[0]][label[1]][label[2]]))\n              ?\n              this.schema[label[0]][label[1]][label[2]].enumLabels\n              || this.schema[label[0]][label[1]][label[2]].enum\n              : undefined,\n          },\n        };\n      }\n\n      if (label.length > 1) {\n        const exists = !!this[label[0]];\n        name = (labels[current]) ? labels[current] : label[1];\n\n        return {\n          ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]][label[1]].type,\n            value: exists ? this[label[0]][label[1]] : undefined,\n            options: (exists && this.schema.hasEnum(this.schema[label[0]][label[1]]))\n              ? this.schema[label[0]][label[1]].enumLabels || this.schema[label[0]][label[1]].enum\n              : undefined,\n          },\n\n        };\n      }\n\n      if (label.length > 0) {\n        name = labels[current] || label[0];\n\n        return {\n          ...acc,\n          [name]: {\n            key: current,\n            type: this.schema[label[0]].type,\n            value: this[label[0]],\n            options: (this.schema.hasEnum(this.schema[label[0]]))\n              ? this.schema[label[0]].enumLabels || this.schema[label[0]].enum\n              : undefined,\n          },\n        };\n      }\n\n      return { ...acc };\n    }, {});\n  }\n\n  /**\n   * Saves de editable Object\n   * @param {Object} editable\n   * @memberof BaseModel\n   */\n  saveEditable(editable) {\n    const labels = this.schema.getAllLabels();\n    const labelKeys = Object.keys(labels);\n\n    const getLabel = value => labelKeys.find(key => labels[key] === value);\n\n    const save = (key, value) => {\n      const keys = key.split('.');\n      /* eslint-disable indent */\n      switch (keys.length) {\n        case 1:\n          this[keys[0]] = value;\n          break;\n\n        case 2:\n          if (this[keys[0]] === undefined) this[keys[0]] = {};\n          this[keys[0]][keys[1]] = value;\n          break;\n\n        case 3:\n          if (this[keys[0]] === undefined) this[keys[0]] = {};\n          if (this[keys[0]][keys[1]] === undefined) this[keys[0]][keys[1]] = {};\n          this[keys[0]][keys[1]][keys[2]] = value;\n          break;\n\n        default:\n          console.error('Not a valid key');\n          throw new Error('Not a valid key');\n      }\n      /* eslint-enable indent */\n    };\n\n    Object.keys(editable).forEach((key) => {\n      const label = getLabel(key);\n\n      if (key === labels[label]) {\n        save(label, editable[key].value);\n      }\n    });\n\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}